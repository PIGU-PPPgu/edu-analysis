---
description:
globs:
alwaysApply: false
---
# 项目结构

这是一个使用Vite、React、TypeScript和Supabase构建的教育管理系统，主要面向非全栈开发者。项目使用lovable框架辅助开发，采用Shadcn UI组件库和Tailwind CSS进行样式设计。

## 主要技术栈

- 前端框架：React with TypeScript
- 构建工具：Vite
- UI组件库：Shadcn UI (基于Radix UI)
- 样式：Tailwind CSS
- 数据库/后端：Supabase
- 状态管理：React Query
- 路由：React Router
- 表单处理：React Hook Form + Zod

## 目录结构

### 主要目录

- `src/` - 源代码根目录
  - `components/` - UI组件
  - `contexts/` - React上下文管理
  - `hooks/` - 自定义React钩子
  - `integrations/` - 第三方集成（如Supabase）
  - `lib/` - 通用库和工具函数
  - `pages/` - 页面组件
  - `utils/` - 工具函数
- `public/` - 静态资源
- `supabase/` - Supabase配置

### 重要文件

- [src/App.tsx](mdc:src/App.tsx) - 应用程序主组件和路由配置
- [src/main.tsx](mdc:src/main.tsx) - 应用程序入口点
- [src/integrations/supabase/client.ts](mdc:src/integrations/supabase/client.ts) - Supabase客户端配置
- [database-schema.sql](mdc:database-schema.sql) - 数据库模式定义

## 数据模型

应用程序使用Supabase作为后端，具有以下主要数据表：

- `user_profiles` - 用户个人信息
- `students` - 学生信息
- `class_info` - 班级信息
- `subjects` - 科目信息
- `teachers` - 教师信息
- `grades` - 学生成绩
- `exam_types` - 考试类型
- `academic_terms` - 学年学期

## 开发者须知

作为非全栈开发者，以下是使用AI辅助开发的关键点：

1. **前端开发**：使用Shadcn UI组件和Tailwind CSS进行UI开发
2. **数据操作**：通过Supabase客户端API进行数据操作
3. **状态管理**：使用React Query管理服务器状态
4. **认证**：使用Supabase内置的认证系统
5. **部署**：Vite项目可以构建并部署到任何静态网站托管服务

当遇到不熟悉的概念或问题时，请详细描述需求并寻求AI帮助。
